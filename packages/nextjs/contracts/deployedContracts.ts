/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    AppointmentRegistry: {
      address: "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "appointmentId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "doctor",
              type: "address",
            },
          ],
          name: "AppointmentApproved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "appointmentId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "doctor",
              type: "address",
            },
          ],
          name: "AppointmentDeclined",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "appointmentId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "patient",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "doctor",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "date",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "reason",
              type: "string",
            },
          ],
          name: "AppointmentRequested",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "appointments",
          outputs: [
            {
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "patient",
              type: "address",
            },
            {
              internalType: "address",
              name: "doctor",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "date",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "reason",
              type: "string",
            },
            {
              internalType: "enum AppointmentRegistry.AppointmentStatus",
              name: "status",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "appointmentId",
              type: "uint256",
            },
          ],
          name: "approveAppointment",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "appointmentId",
              type: "uint256",
            },
          ],
          name: "declineAppointment",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "doctorAppointments",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "doctor",
              type: "address",
            },
          ],
          name: "getDoctorAppointments",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "patient",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "doctor",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "date",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "reason",
                  type: "string",
                },
                {
                  internalType: "enum AppointmentRegistry.AppointmentStatus",
                  name: "status",
                  type: "uint8",
                },
              ],
              internalType: "struct AppointmentRegistry.Appointment[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "patient",
              type: "address",
            },
          ],
          name: "getPatientAppointments",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "patient",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "doctor",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "date",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "reason",
                  type: "string",
                },
                {
                  internalType: "enum AppointmentRegistry.AppointmentStatus",
                  name: "status",
                  type: "uint8",
                },
              ],
              internalType: "struct AppointmentRegistry.Appointment[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nextAppointmentId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "patientAppointments",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "doctor",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "date",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "reason",
              type: "string",
            },
          ],
          name: "requestAppointment",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    PatientRegistry: {
      address: "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "patientAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "doctorAddress",
              type: "address",
            },
          ],
          name: "AccessGranted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "patientAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "doctorAddress",
              type: "address",
            },
          ],
          name: "AccessRevoked",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "doctorAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string",
              name: "specialization",
              type: "string",
            },
          ],
          name: "DoctorRegistered",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "patientAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "phone",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string",
              name: "email",
              type: "string",
            },
          ],
          name: "HealthDetailsUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "patientAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "recordType",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string",
              name: "description",
              type: "string",
            },
          ],
          name: "MedicalRecordAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "patientAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "age",
              type: "uint256",
            },
          ],
          name: "PatientRegistered",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "patientAddress",
              type: "address",
            },
            {
              internalType: "string",
              name: "_recordType",
              type: "string",
            },
            {
              internalType: "string",
              name: "_description",
              type: "string",
            },
            {
              internalType: "string",
              name: "_date",
              type: "string",
            },
            {
              internalType: "string",
              name: "_doctorName",
              type: "string",
            },
          ],
          name: "addMedicalRecord",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_allergies",
              type: "string",
            },
            {
              internalType: "string",
              name: "_insurance",
              type: "string",
            },
          ],
          name: "completeRegistration",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "doctors",
          outputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "specialization",
              type: "string",
            },
            {
              internalType: "bool",
              name: "isRegistered",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "doctorAddress",
              type: "address",
            },
          ],
          name: "getAccessiblePatientsWithDetails",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "patientAddress",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "age",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "phone",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "email",
                  type: "string",
                },
              ],
              internalType: "struct PatientRegistry.PatientDetails[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "doctorAddress",
              type: "address",
            },
          ],
          name: "getDoctorDetails",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "patientAddress",
              type: "address",
            },
          ],
          name: "getGrantedDoctorsWithDetails",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "doctorAddress",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "specialization",
                  type: "string",
                },
              ],
              internalType: "struct PatientRegistry.DoctorDetails[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_patient",
              type: "address",
            },
          ],
          name: "getMedicalHistory",
          outputs: [
            {
              internalType: "string[]",
              name: "recordTypes",
              type: "string[]",
            },
            {
              internalType: "string[]",
              name: "descriptions",
              type: "string[]",
            },
            {
              internalType: "string[]",
              name: "dates",
              type: "string[]",
            },
            {
              internalType: "string[]",
              name: "doctorNames",
              type: "string[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "patientAddress",
              type: "address",
            },
          ],
          name: "getPatientInfo",
          outputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "age",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "phone",
              type: "string",
            },
            {
              internalType: "string",
              name: "email",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "patientAddress",
              type: "address",
            },
          ],
          name: "getPatientMedicalHistory",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "recordType",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "description",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "date",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "doctorName",
                  type: "string",
                },
              ],
              internalType: "struct PatientRegistry.MedicalRecordData[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "patientAddress",
              type: "address",
            },
          ],
          name: "getPersonalHealthDetails",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_doctor",
              type: "address",
            },
          ],
          name: "grantAccess",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "doctorAddress",
              type: "address",
            },
          ],
          name: "isDoctorRegistered",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "patientAddress",
              type: "address",
            },
          ],
          name: "isPatientRegistered",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "patients",
          outputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "age",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "phone",
              type: "string",
            },
            {
              internalType: "string",
              name: "email",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "medicalHistorySize",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "string",
                  name: "allergies",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "insurance",
                  type: "string",
                },
              ],
              internalType: "struct PatientRegistry.PersonalHealthDetails",
              name: "personalDetails",
              type: "tuple",
            },
            {
              internalType: "string",
              name: "allergies",
              type: "string",
            },
            {
              internalType: "string",
              name: "insurance",
              type: "string",
            },
            {
              internalType: "bool",
              name: "isRegistered",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
            {
              internalType: "string",
              name: "_specialization",
              type: "string",
            },
          ],
          name: "registerDoctor",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_age",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_phone",
              type: "string",
            },
            {
              internalType: "string",
              name: "_email",
              type: "string",
            },
          ],
          name: "registerPatient",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_doctor",
              type: "address",
            },
          ],
          name: "revokeAccess",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    YourContract: {
      address: "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "greetingSetter",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "newGreeting",
              type: "string",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "premium",
              type: "bool",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "GreetingChange",
          type: "event",
        },
        {
          inputs: [],
          name: "greeting",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "premium",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_newGreeting",
              type: "string",
            },
          ],
          name: "setGreeting",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "totalCounter",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "userGreetingCounter",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "withdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {},
    },
  },
  421614: {
    AppointmentRegistry: {
      address: "0x5C933Ec7DFe088179b68362df93D5Cf5d7dd3414",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "appointmentId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "doctor",
              type: "address",
            },
          ],
          name: "AppointmentApproved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "appointmentId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "doctor",
              type: "address",
            },
          ],
          name: "AppointmentDeclined",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "appointmentId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "patient",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "doctor",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "date",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "reason",
              type: "string",
            },
          ],
          name: "AppointmentRequested",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "appointments",
          outputs: [
            {
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "patient",
              type: "address",
            },
            {
              internalType: "address",
              name: "doctor",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "date",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "reason",
              type: "string",
            },
            {
              internalType: "enum AppointmentRegistry.AppointmentStatus",
              name: "status",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "appointmentId",
              type: "uint256",
            },
          ],
          name: "approveAppointment",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "appointmentId",
              type: "uint256",
            },
          ],
          name: "declineAppointment",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "doctorAppointments",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "doctor",
              type: "address",
            },
          ],
          name: "getDoctorAppointments",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "patient",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "doctor",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "date",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "reason",
                  type: "string",
                },
                {
                  internalType: "enum AppointmentRegistry.AppointmentStatus",
                  name: "status",
                  type: "uint8",
                },
              ],
              internalType: "struct AppointmentRegistry.Appointment[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "patient",
              type: "address",
            },
          ],
          name: "getPatientAppointments",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "patient",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "doctor",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "date",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "reason",
                  type: "string",
                },
                {
                  internalType: "enum AppointmentRegistry.AppointmentStatus",
                  name: "status",
                  type: "uint8",
                },
              ],
              internalType: "struct AppointmentRegistry.Appointment[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nextAppointmentId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "patientAppointments",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "doctor",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "date",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "reason",
              type: "string",
            },
          ],
          name: "requestAppointment",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    PatientRegistry: {
      address: "0x1f9eDf583c35099d76b3859F8676976c3D240181",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "patientAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "doctorAddress",
              type: "address",
            },
          ],
          name: "AccessGranted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "patientAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "doctorAddress",
              type: "address",
            },
          ],
          name: "AccessRevoked",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "doctorAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string",
              name: "specialization",
              type: "string",
            },
          ],
          name: "DoctorRegistered",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "patientAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "phone",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string",
              name: "email",
              type: "string",
            },
          ],
          name: "HealthDetailsUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "patientAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "recordType",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string",
              name: "description",
              type: "string",
            },
          ],
          name: "MedicalRecordAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "patientAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "age",
              type: "uint256",
            },
          ],
          name: "PatientRegistered",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "patientAddress",
              type: "address",
            },
            {
              internalType: "string",
              name: "_recordType",
              type: "string",
            },
            {
              internalType: "string",
              name: "_description",
              type: "string",
            },
            {
              internalType: "string",
              name: "_date",
              type: "string",
            },
            {
              internalType: "string",
              name: "_doctorName",
              type: "string",
            },
          ],
          name: "addMedicalRecord",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_allergies",
              type: "string",
            },
            {
              internalType: "string",
              name: "_insurance",
              type: "string",
            },
          ],
          name: "completeRegistration",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "doctors",
          outputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "specialization",
              type: "string",
            },
            {
              internalType: "bool",
              name: "isRegistered",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "doctorAddress",
              type: "address",
            },
          ],
          name: "getAccessiblePatientsWithDetails",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "patientAddress",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "age",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "phone",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "email",
                  type: "string",
                },
              ],
              internalType: "struct PatientRegistry.PatientDetails[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "doctorAddress",
              type: "address",
            },
          ],
          name: "getDoctorDetails",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "patientAddress",
              type: "address",
            },
          ],
          name: "getGrantedDoctorsWithDetails",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "doctorAddress",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "specialization",
                  type: "string",
                },
              ],
              internalType: "struct PatientRegistry.DoctorDetails[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_patient",
              type: "address",
            },
          ],
          name: "getMedicalHistory",
          outputs: [
            {
              internalType: "string[]",
              name: "recordTypes",
              type: "string[]",
            },
            {
              internalType: "string[]",
              name: "descriptions",
              type: "string[]",
            },
            {
              internalType: "string[]",
              name: "dates",
              type: "string[]",
            },
            {
              internalType: "string[]",
              name: "doctorNames",
              type: "string[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "patientAddress",
              type: "address",
            },
          ],
          name: "getPatientInfo",
          outputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "age",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "phone",
              type: "string",
            },
            {
              internalType: "string",
              name: "email",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "patientAddress",
              type: "address",
            },
          ],
          name: "getPatientMedicalHistory",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "recordType",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "description",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "date",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "doctorName",
                  type: "string",
                },
              ],
              internalType: "struct PatientRegistry.MedicalRecordData[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "patientAddress",
              type: "address",
            },
          ],
          name: "getPersonalHealthDetails",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_doctor",
              type: "address",
            },
          ],
          name: "grantAccess",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "doctorAddress",
              type: "address",
            },
          ],
          name: "isDoctorRegistered",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "patientAddress",
              type: "address",
            },
          ],
          name: "isPatientRegistered",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "patients",
          outputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "age",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "phone",
              type: "string",
            },
            {
              internalType: "string",
              name: "email",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "medicalHistorySize",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "string",
                  name: "allergies",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "insurance",
                  type: "string",
                },
              ],
              internalType: "struct PatientRegistry.PersonalHealthDetails",
              name: "personalDetails",
              type: "tuple",
            },
            {
              internalType: "string",
              name: "allergies",
              type: "string",
            },
            {
              internalType: "string",
              name: "insurance",
              type: "string",
            },
            {
              internalType: "bool",
              name: "isRegistered",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
            {
              internalType: "string",
              name: "_specialization",
              type: "string",
            },
          ],
          name: "registerDoctor",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_age",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_phone",
              type: "string",
            },
            {
              internalType: "string",
              name: "_email",
              type: "string",
            },
          ],
          name: "registerPatient",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_doctor",
              type: "address",
            },
          ],
          name: "revokeAccess",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    YourContract: {
      address: "0xEFf75468920822A47D14CF4DAD598013f12ce5A6",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "greetingSetter",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "newGreeting",
              type: "string",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "premium",
              type: "bool",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "GreetingChange",
          type: "event",
        },
        {
          inputs: [],
          name: "greeting",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "premium",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_newGreeting",
              type: "string",
            },
          ],
          name: "setGreeting",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "totalCounter",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "userGreetingCounter",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "withdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
